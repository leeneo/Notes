npm安装:安装nodejs

npm config ls 查看参数
npm get cache  查看 cache 路径
npm get prefix 查看 prefix路径
npm config set cache -g "C:\\Users\\Administrator\\AppData\\Roaming\\npm"
npm config set prefix -g "f:npm"

npm 默认模块安装路径在prefix:'C:\\Users\\Administrator\\AppData\\Roaming\\npm' 下的node_modules目录中。
使用npm config ls， 或者npm prefix -g 查看 prefix 全局路径。
npm config set prefix "f:/npm" -g;
修改prefix路径,安装模块会自动在f:/npm/目录下生成node_modules目录。


淘宝 NPM 镜像&安装cnpm(同步频率10分钟一次)

设置镜像：npm config set registry https://registry.npm.taobao.org

安装cnpm：npm install -g cnpm --registry=https://registry.npm.taobao.org

npm uni
npm <cmd> -h    显示<cmd>  help
npm -l          display full usage info
npm help <cmd>  浏览器中查看cmd help
npm help npm    浏览器中查看npm help
npm cache clean --force==>npm cache verify --force

查看版本： npm -v
更新版本： npm up npm -g|npm up <pkg> -g

*另nodejs安装目录下也有个node_modules这个是node的，默认只有npm一个模块。

Windows下的Nodejs npm路径是appdata，很不爽，想改回来，但是在cmd下执行以下命令也无效

npm config set cache "D:\nodejs\node_cache"
npm config set prefix "D:\nodejs\node_global"
最后在nodejs的安装目录中找到node_modules\npm\.npmrc文件
修改如下即可：
prefix = D:\nodejs\node_global
cache = D:\nodejs\node_global

快速删除 node_modules
-->cd npm目录 
-->cnpm install -g rimraf
-->rimraf nodu_modules

**************************************************************************************************************************************************************************

npm install --save 与npm install --save-dev 的区别

npm install <packageName>  --save：发布安装
---项目发布上线之后还会依赖用到的插件，没有这些插件，项目不能运行
---自动更改package.json  写入dependencies 节点
---没有package.json 还怎么开开心心的 clone呢

npm install --save-dev：本地开发安装，有时会产生package-lock.json(锁定各依赖包版本)
---安装到开发依赖中，项目上线之后不会用到的插件，例如'babel-loader',项目解析完发布
---自动更改package.json  写入devDependencies 节点

