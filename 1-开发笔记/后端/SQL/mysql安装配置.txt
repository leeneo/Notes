===========================================================================================================================
下载&安装&使用
===========================================================================================================================
mysql官方下载地址 https://dev.mysql.com/downloads/

1,下载完成后解压，将bin目录添加环境变量，创建data目录，bin同级创建my.ini
    my.ini:
    [mysql]

    # 命令终端beep声
    no-beep

    # 客户端默认字符集
    default-character-set=utf8

    [mysqld]

    # 端口
    port=3306

    # 安装目录
    basedir=H:\\Program Files\\mysql

    # 数据存放目录
    datadir=F:\\data

    # 允许最大连接数
    max_connections=200

    # server端默认字符集  
    character-set-server=utf8

    # 建表时默认存储引擎  
    default-storage-engine=INNODB

2,初始化：mysqld --initialize-insecure
3,指定默认文件(my.ini)：mysqld --defaults-file="H:\Program Files\mysql\my.ini" --initialize
4,注册mysql服务（如果已存在服务，那么移除=>mysqld  --remove）：mysqld --install
5,启动mysql服务，有两种方式，且两种方式互相冲突
    5.1, net start mysql    （此时执行5.2操作，会提示拒绝访问）
    5.2, mysqld --console   （在mysql服务启动的情况下，mysqld 是无法正常启动mysql服务的）

===========================================================================================================================
登录终端&用户设置
===========================================================================================================================
登录终端：mysql -uroot -p --默认空密码，直接回车
空密码时，设置新密码，进入mysql终端后：mysql> set password ='123';
已有密码时，修改密码：mysql> alter user 'root'@'localhost' identified by '123';
已有密码时，置空密码：mysql> update user set authentication_string='' where user='root';mysql> alter user 'root'@'%' identified by '';

创建用户：mysql> create user 'sea'@'localhost' identified by '123';

用户授权：mysql> grant all on *.* to 'sea'@'localhost';
all 代表所有操作，常见操作有select，insert，update 等，on指定数据库或者数据表；
如果你要给某个用户它mydatabase这个数据库中mytable这个表的insert权限：grant insert on mydatabases.mytable to 'xx'@'xxx';

另一种设置密码方式，命令行模式：
1, cmd：mysqladmin -uroot -p password 新密码 
2, cmd：mysqladmin -uroot -p旧密码 password 新密码 -- -p与旧密码之间不能有空格，这种方式会有警告

===========================================================================================================================
图形化管理工具
===========================================================================================================================
1、phpMyAdmin
2、MySQLDumper
3、Navicat
4、MySQL GUI Tools
5、MySQL ODBC Connector
6、MySQL Workbench
7、SQLyog 

===========================================================================================================================
连接mysql
===========================================================================================================================
mysql command line client ==>连接mysql

mysql -h bdm-004.hichina.com -u bdm004032 ―default-character-set=utf8 -p password  bdm0040320_db < d:\bdm0040320_db.sql 

-h后面是数据库地址 -u后面是用户名 ―default-character-set= 后面指定字符集，当初备份的时候用的什么字符集这里就还用什么   
-p后面是密码    最后是跟上数据库名    d:\bdm0040320_db.sql 是数据库备份文件路径；

PHP数据库连接例程说明:
$dbh = mysql_connect(' localhost','数据库用户名','数据库密码');
mysql_select_db('数据库名');
$query = "insert into requests(date, request, email, priority,status) values (NOW(),'$description', '$email', '$priority', 'NEW')";
$res = mysql_query($query, $dbh);
$query = "select max(id) from requests";
$res = mysql_query($query, $dbh);
$err = mysql_error();
if($err){
echo "发生错误，请通知管理员";
}
$row = mysql_fetch_row($res);
echo "未来您使用的号码为: ".$row[0];
?>


Linux云虚拟主机通过pdo链接mysql数据库
更新时间：2017-06-07 13:26:11   分享：   
PDO(PHP Data Object) 是PHP5中新加入的模块，是PHP5新加入的一个重大功能，使用非常方便，php3/4没法使用，链接实例可以参考如下代码：

<?php 
$pdo = new PDO("mysql:host=数据库地址;dbname=数据库名","数据库用户名","数据库密码"); 
if(!$pdo){
 echo("fail");
}else{
 echo("sucess");
} 
?>

 

常用的一些函数：

PDO::query() 主要是用于有记录结果返回的操作，特别是SELECT操作。
PDO::exec() 主要是针对没有结果集合返回的操作，如INSERT、UPDATE等操作。
PDO::lastInsertId() 返回上次插入操作，主键列类型是自增的最后的自增ID。 
PDOStatement::fetch() 是用来获取一条记录。 
PDOStatement::fetchAll() 是获取所有记录集到一个中。


asp.net连接实例

using MySql.Data.MySqlClient;

namespace ConnectMySql
{
    class Class1
    {
        public MySqlDataReader GetData()
        {
            string connection = "server=localhost;user id=root;password=123456;database=ABC; pooling=true;";
            MySqlConnection conn = new MySqlConnection(connection);
            string sqlQuery = "SELECT * FROM Article";
            MySqlCommand comm = new MySqlCommand(sqlQuery, conn);
            conn.Open();
            MySqlDataReader dr = comm.ExecuteReader();
            conn.Close();
            return dr;
        }
    }
}

代码注意两点：一是使用using MySql.Data.MySqlClient; 二是写好连接字符串connection，当然，这个连接字符串可以不象上面那样写在具体的代码中，而是推荐写在ASP.NET应用的根目录中的配置文件web.config的<connectionStrings>节内，如下：

3-2、在web.config中配置连接字符串完成对MySQL数据库的连接（推荐，替代方法3-1）

复制代码
 <connectionStrings>
    <add name="DefaultConnection" connectionString="Data Source=(LocalDb)\v11.0;Initial Catalog=aspnet-Sanlogic.MSTWebsite-20140219093639;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|\aspnet-Sanlogic.MSTWebsite-20140219093639.mdf" providerName="System.Data.SqlClient" />

    <add name="DBConnection"   connectionString="server=localhost;user id=root;password=123456;database=ABC; pooling=true;"
           providerName="MySql.Data.MySqlClient" />  
    
  </connectionStrings>

其中DBConnection即是对MySQL的连接，如果是这样的配置连接字符串，可以使用下面的代码将其取出（注意仍然有 using MySql.Data.MySqlClient; 语句）：

        public static MySqlConnection CreateConn()
        {
            string _conn = WebConfigurationManager.ConnectionStrings["DBConnection"].ConnectionString;
            MySqlConnection conn = new MySqlConnection(_conn);
            return conn;
        }
使用这种办法取出连接字符串并建立对数据库的连接，今后的使用直接调用该方法创建对MySQL数据库的连接，并使用ADO.NET完成任务。



===========================================================================================================================
mysql 优化
===========================================================================================================================
mysql瘦身--删掉多余的源文件和lib下debug文件

===========================================================================================================================











